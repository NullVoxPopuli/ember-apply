name: "CI"
on:
  pull_request:
  push:
    # filtering branches here prevents duplicate builds from pull_request and push
    branches:
      - main
      - master

env:
  CI: true
  CACHE_PATH: '**/node_modules'

jobs:
  install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      pending: ${{ steps.set-pending.outputs.pending }}

    steps:
    - uses: wyvox/action@v1
    - id: set-pending
      run: echo "pending=$(./cache-status.sh)" >> $GITHUB_OUTPUT
    - run:  echo ${{ github.event.number }} > ./pr-number.txt

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [install_dependencies]

    steps:
      - uses: wyvox/action@v1
      - name: Lints
        run: pnpm lint

  tests:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: "Tests"
    runs-on: "${{ matrix.platform }}"
    needs: [install_dependencies]

    steps:
    - uses: wyvox/action@v1
    - run: |
        pnpm add --global ember-cli
    - name: Tests
      run: |
        curl https://get.volta.sh | bash
        export VOLTA_FEATURE_PNPM=1
        export VOLTA_HOME="$HOME/.volta"
        export PATH="$VOLTA_HOME/bin:$PATH"
        pnpm test
      env:
        DEBUG: 'true'


##############################################################
##############################################################
#
# These jobs won't run on pull requests.
# They would fail anyway because secrets are not exposed.
#
##############################################################
##############################################################


  PrepareDeployProduction:
    name: "Prepare Deploy"
    if: github.repository == 'NullVoxPopuli/ember-apply' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - lint
      - tests

    steps:
      - uses: wyvox/action@v1
      - run: ./build-docs.sh 
      # Used for faster deploy so we don't need to checkout the repo
      - uses: actions/upload-artifact@v4
        with:
          name: deploy-prep-dist
          if-no-files-found: error
          path: | 
            ./packages/docs/dist/**/*
            !node_modules/
            !./**/node_modules/



  DeployProduction:
    name: "Deploy: Production"
    if: github.repository == 'NullVoxPopuli/ember-apply' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: ["PrepareDeployProduction"]
    strategy: 
      matrix:
        app: 
        - { path: "./packages/docs/dist", cloudflareName: "ember-apply" }
          
    permissions:
      contents: read
      deployments: write
    outputs:
      limberUrl: ${{ steps.limber.outputs.url }}
      tutorialUrl: ${{ steps.tutorial.outputs.url }}
    steps:
      - uses: actions/download-artifact@v4
        name: deploy-prep-dist
      - name: Publish ${{ matrix.app.id }}
        uses: cloudflare/pages-action@v1.5.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ matrix.app.cloudflareName }}
          directory: ./deploy-prep-dist/
          # directory: ./deploy-prep-dist/${{ matrix.app.path }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

